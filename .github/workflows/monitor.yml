name: Monitor festival (pipeline completa)

on:
  workflow_dispatch: {}   # avvio manuale

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configura git e allinea a main
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin main
          git reset --hard origin/main

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Installa dipendenze
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Scarico le pagine in modo "soft" (timeout duri per non bloccarsi)
      - name: Scarica pagine (snapshot)
        run: |
          chmod +x scripts/archive_pages.sh
          ./scripts/archive_pages.sh

      # Estraggo da HTML -> aggiungo record al CSV (evita duplicati)
      - name: Parser HTML -> CSV
        run: |
          python scripts/parse_html_to_csv.py

      # Aggiorno report (ora di Roma) e analisi dal CSV
      - name: Header report (ora di Roma)
        run: |
          mkdir -p reports
          {
            echo "# Report festival â€“ aggiornato $(TZ=Europe/Rome date +'%Y-%m-%d %H:%M %Z')"
            echo
          } > reports/ultimo_report.md

      - name: Genera analisi dal CSV
        run: |
          python scripts/generate_report.py

      - name: Commit e push forzato
        run: |
          git add -A
          git commit -m "crawl+parse+report: aggiornamento" || echo "Niente da committare"
          git push origin HEAD:main --force
